{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/grid/grid.component.ts","webpack:///src/app/grid/grid.component.html","webpack:///src/app/services/movies.service.ts","webpack:///src/app/star/star.component.ts","webpack:///src/app/star/star.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","moviesService","title","date","Date","currentYear","getFullYear","years","movies","loadYears","console","log","_manageTitle","_manageYear","getMovies","subscribe","res","Search","map","movie","getDetails","imdbID","mov","Title","Year","Genre","Country","Poster","Ratings","push","alert","i","value","handleClick","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","GridComponent","MoviesService","http","apiKey","url","year","get","providedIn","StarComponent","stars","percent","rating","Source","parseInt","Value","arr","Array","fill","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ÉµAPP_ID_RANDOM_PROVIDER } from '@angular/core';\nimport { MoviesService } from \"./services/movies.service\";\nimport { IMovie } from './IMovie';\nimport { isUndefined } from 'util';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Tarea 2'\n  date: Date = new Date()\n  currentYear: number = this.date.getFullYear()\n  years: number[] = []\n  movies: IMovie[] = []\n  _manageTitle: string\n  _manageYear: number\n\n  constructor(private moviesService: MoviesService) {\n  }\n\n  ngOnInit() {\n    this.loadYears()\n  }\n\n  get manageTitle(): string {\n    return this._manageTitle\n  }\n\n  set manageTitle(value: string) {\n    this._manageTitle = value\n  }\n\n  get manageYear(): number {\n    return this._manageYear\n  }\n\n  set manageYear(value: number) {\n    this._manageYear = value\n  }\n\n  handleClick() {\n    this.movies = []\n    console.log(this._manageTitle + \"-\" + this._manageYear)\n    this.moviesService.getMovies(this._manageTitle, this._manageYear).subscribe((res: any) => {\n      !isUndefined(res.Search)?(\n      res.Search.map(movie => {\n        this.moviesService.getDetails(movie.imdbID).subscribe((res: any) => {\n          let mov: IMovie = {\n            'Title': movie.Title,\n            'Year': movie.Year,\n            'Genre': res.Genre,\n            'Country': res.Country,\n            'img': movie.Poster,\n            'Rate': res.Ratings\n          }\n          console.log(\"rate \"+movie.Ratings)\n          isUndefined(res.Search)?this.movies.push(mov):alert(\"debe ingresar un titulo\")\n          console.log(mov.Title)\n          console.log(\"movies2\" + this.movies)\n        })\n      })):(alert(\"No se encontraron peliculas\"))\n    })\n  }\n\n  loadYears() {\n    for (let i = this.currentYear; i > 1888; i--) {\n      this.years.push(i)\n    }\n  }\n}\n","<section id=\"cuerpo\">\n    <section id=\"header\">\n        <nav class=\"navbar\">\n            <a id=\"brand\" class=\"navbar-brand\" href=\"#\">\n                <h2 id=\"name\" class=\"d-inline-block\">Buscador de peliculas</h2>\n                <img id=\"logo\" src=\"../assets/Logo.png\" width=\"120\" class=\"d-inline-block align-top\" alt=\"\">\n            </a>\n        </nav>\n    </section>\n    <section id=\"formulario\">\n        <form>\n            Nombre de la pelicula:\n            <input placeholder=\"Nombre de la pelicula\" style=\"margin-right: 2em;\" [(ngModel)]=\"manageTitle\" name=\"Title\"> AÃ±o:\n            <select class=\"custom-select\" id=\"inputGroupSelect01\" style=\"width: 194px;\" [(ngModel)]=\"manageYear\" name=\"Year\">\n                <option selected>Seleccionar aÃ±o...</option>\n                <option *ngFor=\"let year of years\" [value]=\"year\" >{{year}}</option>\n            </select>\n            <button type=\"button\" class=\"btn btn-dark\" style=\"margin-left: 2em;\" (click)=\"handleClick()\">\n              <i class=\"fas fa-search-plus\"></i>\n            </button>\n        </form>\n    </section>\n    <app-grid [datos]=\"movies\"></app-grid>\n</section>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { GridComponent } from './grid/grid.component';\nimport {StarComponent} from './star/star.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GridComponent,\n    StarComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport {IMovie} from '../IMovie';\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.css']\n})\nexport class GridComponent implements OnInit {\n  @Input ('datos') public movies: IMovie []\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<section id=\"displayMovies\" class=\"grid-container\">\n    <div class=\"grid-item\" *ngFor=\"let movie of movies\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\" align=\"center\">{{movie.Title}}</h5>\n                <h6 class=\"card-title\" align=\"center\">AÃ±o:{{movie.Year}}</h6>\n                <h6 class=\"card-title\" align=\"center\">Genero:{{movie.Genre}}</h6>\n                <h6 class=\"card-title\" align=\"center\">Pais:{{movie.Country}}</h6>\n                <img class=\"card-img\" src={{movie.img}} style=\"width: 300px;\">\n                <app-star [rating]=\"movie.Rate\"></app-star>\n            </div>\n        </div>\n    </div>\n</section>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoviesService {\n  apiKey: string = '96905173'\n  url: string = `http://www.omdbapi.com/?apikey=${this.apiKey}&`\n\n  constructor(private http: HttpClient) {\n  }\n\n  getMovies(title: string, year: number):Observable<any>{\n    return this.http.get<any>(`${this.url}s=${title}&y=${year}`)\n  }\n  getDetails(id:number):Observable<any>{\n    return this.http.get<any>(`${this.url}i=${id}`)\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-star',\n  templateUrl: './star.component.html',\n  styleUrls: ['./star.component.css']\n})\nexport class StarComponent implements OnInit {\n  @Input() rating: any\n  stars: number = 0;\n  arr: any;\n  constructor() { }\n\n  ngOnInit() {\n    let percent = 0\n    this.rating.map(rating => {\n      if (rating.Source == \"Rotten Tomatoes\") {\n        percent = parseInt(rating.Value, 10)\n        if (percent <= 20) {\n          this.stars = 1\n        } else if (percent > 20 && percent <= 40) {\n          this.stars = 2\n        } else if (percent > 40 && percent <= 60) {\n          this.stars = 3\n        } else if (percent > 60 && percent <= 80) {\n          this.stars = 4\n        } else if (percent > 80) {\n          this.stars = 5\n        }\n      }\n    })\n    this.arr = new Array(this.stars).fill(1);\n  }\n\n}\n","<div class=\"crop\" [title]=\"rating\" style=\"text-align: center;margin-top: 1em;\">\n    <div>\n        <span *ngFor=\"let i of arr\">\n            <i class=\"fa fa-star\" style=\"color:white;\"></i>\n        </span>\n    </div>\n    <div *ngIf=\"this.stars==0\" align=\"center\">\n        No existe calificaciÃ³n\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}